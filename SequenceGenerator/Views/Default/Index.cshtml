@using SequenceGenerator.Classs
@using SequenceGenerator.ViewModel
@model SequenceGenerator.ViewModel.InputViewModel
@{
    ViewBag.Title = "Index";
}
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet"/>
    <br />
    <div class="alert alert-info alert-dismissible" role="alert" style="width: 60%">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <strong>Instruction:</strong> Enter a positive number between 1 and 250.Then press Generate button
    </div>
<br/>
<br/>
          @using (Html.BeginForm("SequenceGenerator", "Default"))
          {
              @Html.AntiForgeryToken()
              <div class="form-group row">
                  @Html.Label("num", "Positive Number(1-250):", new {@class = "text-primary"})
                  @Html.TextBoxFor(x => Model.Number, new {placeholder = "Positive!", @class = "form-control", type = "Number", Min = 1, max = 250, required = true })
                  @Html.ValidationMessageFor(x => Model.Number)
              </div>
              <div class="form-group row">
                  @Html.Label("which", "Select a sequence type:", new {@class = "text-primary"})
                  @Html.DropDownListFor(x => Model.SelectedSequenceId, new SelectList(Model.SequenceList, "Key", "Value"), new {@class = "form-control"})
                  @Html.ValidationMessageFor(x => Model.SelectedSequenceId)
              </div>

              <br/>
              <button type="submit" class="btn btn-default btn-primary">Generate Sequence!</button>
          }
